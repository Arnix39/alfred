---
kind: pipeline
type: docker
name: Host build
platform:
  os: linux
  arch: amd64

steps:
- name: Build
  image: ros:humble-ros-base-jammy
  commands:
    - cd workspace
    - rm -fR sim/
    - . /opt/ros/$ROS_DISTRO/setup.sh
    - apt-get update 
    - rosdep install -y
      --from-paths src
      --ignore-src
      --skip-keys "fastcdr \
        rti-connext-dds-6.0.1 \
        urdfdom_headers"
    - rm -rf /var/lib/apt/lists/*
    - colcon build
      --symlink-install
      --cmake-args -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DSYNTHETIC_BUILD:BOOL=ON
      --no-warn-unused-cli

- name: Archive build logs
  image: ros:humble-ros-base-jammy
  commands:
    - cd workspace
    - find log/latest_build/ -printf "%P\n" | tar -czf build_logs.tar.gz --no-recursion -C log/latest_build/ -T -
  when:
    status:
    - failure
  depends_on:
    - Build

- name: Upload build logs
  image: plugins/artifactory
  settings:
    url: http://192.168.1.252/artifactory
    username:
      from_secret: ARTIFACTORY_USERNAME
    password:
      from_secret: ARTIFACTORY_PASSWORD
    source: workspace/build_logs.tar.gz
    target: Alfred/logs/build/target/build_$${DRONE_BUILD_NUMBER}_build_logs.tar.gz
    flat: true
    insecure: true
  when:
    status:
    - failure
  depends_on:
    - Archive build logs

- name: Tests
  image: ros:humble-ros-base-jammy
  commands:
    - cd workspace
    - . /opt/ros/$ROS_DISTRO/setup.sh
    - apt-get update 
    - rosdep install -y
      --from-paths src
      --ignore-src
      --skip-keys "fastcdr \
        rti-connext-dds-6.0.1 \
        urdfdom_headers"
    - rm -rf /var/lib/apt/lists/*
    - colcon test
    - colcon test-result
  depends_on:
    - Build

- name: Archive tests logs
  image: ros:humble-ros-base-jammy
  commands:
    - cd workspace
    - find log/latest_test/ -printf "%P\n" | tar -czf tests_logs.tar.gz --no-recursion -C log/latest_test/ -T -
  when:
    status:
    - failure
    - success
  depends_on:
    - Tests

- name: Upload test logs
  image: plugins/artifactory
  settings:
    url: http://192.168.1.252/artifactory
    username:
      from_secret: ARTIFACTORY_USERNAME
    password:
      from_secret: ARTIFACTORY_PASSWORD
    source: workspace/tests_logs.tar.gz
    target: Alfred/logs/tests/build_$${DRONE_BUILD_NUMBER}_tests_logs.tar.gz
    flat: true
    insecure: true
  when:
    status:
    - failure
    - success
  depends_on:
    - Archive tests logs

trigger:
  event:
    exclude:
    - promote

---
kind: pipeline
type: docker
name: Target build
platform:
  os: linux
  arch: amd64

steps:
- name: Prepare sysroot
  image: docker:dind
  volumes:
  - name: dockersock
    path: /var/run
  commands:
    - sleep 5 # give docker enough time to start
    - cd workspace/cross_compile
    - mkdir workspace
    - cp -r ../src workspace
    - rm -fR workspace/src/sim/
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker build -t arm_ros2:humble -f ./Dockerfile/Dockerfile_arm64_humble .
    - docker run --name alfred_cross arm_ros2:humble
    - docker container export -o sysroot.tar alfred_cross
    - mkdir sysroot
    - tar -C sysroot -xf sysroot.tar lib usr opt etc
    - rm sysroot.tar
    - rm -r workspace

- name: Build
  image: ros:humble-ros-base-jammy
  environment:
    RMW_IMPLEMENTATION: rmw_fastrtps_cpp
    TARGET_ARCH: aarch64
    CROSS_COMPILE: /usr/bin/aarch64-linux-gnu-
    PYTHON_SOABI: cpython-310-aarch64-linux-gnu
    CC: /usr/bin/aarch64-linux-gnu-gcc
    CXX: /usr/bin/aarch64-linux-gnu-g++

  commands:
    - export SYSROOT=$DRONE_WORKSPACE/workspace/cross_compile/sysroot
    - export ROS2_INSTALL_PATH=$DRONE_WORKSPACE/workspace/install
    - export CROSS_COMPILE_DIR=$DRONE_WORKSPACE/workspace/cross_compile
    - cd workspace
    - rm -fR sim/.
    - . /opt/ros/$ROS_DISTRO/setup.sh
    - apt-get update
    - apt-get install -y g++-aarch64-linux-gnu g++-arm-linux-gnueabihf
    - rosdep install -y
      --from-paths src
      --ignore-src
      --skip-keys "fastcdr \
        rti-connext-dds-6.0.1 \
        urdfdom_headers"
    - rm -rf /var/lib/apt/lists/*
    # Quick and dirty fix => to be investigated further
    - cp $SYSROOT/usr/lib/aarch64-linux-gnu/libpython3.10.so /usr/lib/aarch64-linux-gnu/libpython3.10.so
    - colcon build
      --cmake-args -DCMAKE_TOOLCHAIN_FILE=$CROSS_COMPILE_DIR/cmake-toolchains/generic_linux.cmake
      --no-warn-unused-cli
  depends_on:
    - Prepare sysroot

- name: Copy sysroot to host
  image: ros:humble-ros-base-jammy
  volumes:
    - name: sysroot
      path: /tmp/sysroot
  commands:
    - apt-get update
    - apt-get install -y rsync
    - rsync -a --delete $DRONE_WORKSPACE/workspace/cross_compile/sysroot/ /tmp/sysroot/
  depends_on:
    - Build

- name: Archive build logs
  image: ros:humble-ros-base-jammy
  commands:
    - cd workspace
    - find log/latest_build/ -printf "%P\n" | tar -czf build_logs.tar.gz --no-recursion -C log/latest_build/ -T -
  when:
    status:
    - failure
  depends_on:
    - Build

- name: Upload build logs
  image: plugins/artifactory
  settings:
    url: http://192.168.1.252/artifactory
    username:
      from_secret: ARTIFACTORY_USERNAME
    password:
      from_secret: ARTIFACTORY_PASSWORD
    source: workspace/build_logs.tar.gz
    target: Alfred/logs/build/target/build_$${DRONE_BUILD_NUMBER}_build_logs.tar.gz
    flat: true
    insecure: true
  when:
    status:
    - failure
  depends_on:
    - Archive build logs

- name: Archive binaries
  image: ros:humble-ros-base-jammy
  commands:
    - cd workspace
    - find install/ -printf "%P\n" | tar -czf install.tar.gz --no-recursion -C install/ -T -
  depends_on:
    - Build

- name: Upload binaries
  image: plugins/artifactory
  settings:
    url: http://192.168.1.252/artifactory
    username:
      from_secret: ARTIFACTORY_USERNAME
    password:
      from_secret: ARTIFACTORY_PASSWORD
    source: workspace/install.tar.gz
    target: Alfred/binaries/development/build_$${DRONE_BUILD_NUMBER}_install.tar.gz
    flat: true
    insecure: true
  depends_on:
    - Archive binaries

services:
- name: docker
  image: docker:dind
  privileged: true
  volumes:
  - name: dockersock
    path: /var/run

volumes:
- name: dockersock
  temp: {}

- name: sysroot
  host:
    path: /usr/tmp/sysroot

trigger:
  event:
    exclude:
    - promote

---
kind: pipeline
type: docker
name: Deploy
platform:
  os: linux
  arch: amd64

steps:
- name: Build
  image: ros:humble-ros-base-jammy
  volumes:
    - name: sysroot
      path: /tmp/sysroot
  environment:
    RMW_IMPLEMENTATION: rmw_fastrtps_cpp
    TARGET_ARCH: aarch64
    SYSROOT: /tmp/sysroot
    CROSS_COMPILE: /usr/bin/aarch64-linux-gnu-
    PYTHON_SOABI: cpython-310-aarch64-linux-gnu
    CC: /usr/bin/aarch64-linux-gnu-gcc
    CXX: /usr/bin/aarch64-linux-gnu-g++

  commands:
    - export ROS2_INSTALL_PATH=$DRONE_WORKSPACE/workspace/install
    - export CROSS_COMPILE_DIR=$DRONE_WORKSPACE/workspace/cross_compile
    - cd workspace
    - rm -fR sim/.
    - . /opt/ros/$ROS_DISTRO/setup.sh
    - apt-get update
    - apt-get install -y g++-aarch64-linux-gnu g++-arm-linux-gnueabihf
    - rosdep install -y
      --from-paths src
      --ignore-src
      --skip-keys "fastcdr \
        rti-connext-dds-6.0.1 \
        urdfdom_headers"
    - rm -rf /var/lib/apt/lists/*
    # Quick and dirty fix => to be investigated further
    - cp $SYSROOT/usr/lib/aarch64-linux-gnu/libpython3.10.so /usr/lib/aarch64-linux-gnu/libpython3.10.so
    - colcon build
      --cmake-args -DCMAKE_TOOLCHAIN_FILE=$CROSS_COMPILE_DIR/cmake-toolchains/generic_linux.cmake
      --no-warn-unused-cli

- name: Deploy
  image: drillster/drone-rsync
  settings:
    hosts: [ "192.168.1.253" ]
    port: 22
    source: workspace/install/
    target: ~/Alfred/
    user:
      from_secret: ALFRED_USERNAME
    key:
      from_secret: ALFRED_SSH_KEY
    args:
      -v
      --delete
      --copy-links
  depends_on:
    - Build

- name: Archive build logs
  image: ros:humble-ros-base-jammy
  commands:
    - cd workspace
    - find log/latest_build/ -printf "%P\n" | tar -czf build_logs.tar.gz --no-recursion -C log/latest_build/ -T -
  when:
    status:
    - failure
  depends_on:
    - Build

- name: Upload build logs
  image: plugins/artifactory
  settings:
    url: http://192.168.1.252/artifactory
    username:
      from_secret: ARTIFACTORY_USERNAME
    password:
      from_secret: ARTIFACTORY_PASSWORD
    source: workspace/build_logs.tar.gz
    target: Alfred/logs/build/target/build_$${DRONE_BUILD_NUMBER}_build_logs.tar.gz
    flat: true
    insecure: true
  when:
    status:
    - failure
  depends_on:
    - Archive build logs

- name: Archive binaries
  image: ros:humble-ros-base-jammy
  commands:
    - cd workspace
    - find install/ -printf "%P\n" | tar -czf install.tar.gz --no-recursion -C install/ -T -
  depends_on:
    - Build

- name: Upload binaries
  image: plugins/artifactory
  settings:
    url: http://192.168.1.252/artifactory
    username:
      from_secret: ARTIFACTORY_USERNAME
    password:
      from_secret: ARTIFACTORY_PASSWORD
    source: workspace/install.tar.gz
    target: Alfred/binaries/deployment/build_$${DRONE_BUILD_NUMBER}_install.tar.gz
    flat: true
    insecure: true
  depends_on:
    - Archive binaries

volumes:
- name: sysroot
  host:
    path: /usr/tmp/sysroot

trigger:
  event:
  - promote
  target:
  - Alfred
