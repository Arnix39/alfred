---
kind: pipeline
type: docker
name: Host build
platform:
  os: linux
  arch: amd64

steps:
- name: Build Alfred
  image: ros:humble-ros-base-jammy@sha256:e2bf5d73089ecafac2f14de05e7cbc1b20ab7568185e2011cec508286dcc6b09
  commands:
    - cd alfred
    - rm -fR src/sim/
    - . /opt/ros/$ROS_DISTRO/setup.sh
    - apt-get update 
    - rosdep install -y
      --from-paths src
      --ignore-src
    - colcon build
      --symlink-install
      --cmake-args -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DSYNTHETIC_BUILD:BOOL=ON
      --no-warn-unused-cli

- name: Archive Alfred's build logs
  image: alpine:latest
  commands:
    - cd alfred/log/latest_build/
    - find -type f -print | tar -czf build_logs.tar.gz --no-recursion -T -
  when:
    status:
    - failure
  depends_on:
    - Build Alfred

- name: Upload Alfred's build logs
  image: plugins/artifactory
  settings:
    url:
      from_secret: ARTIFACTORY_PATH
    username:
      from_secret: ARTIFACTORY_USERNAME
    password:
      from_secret: ARTIFACTORY_PASSWORD
    source: alfred/log/latest_build/build_logs.tar.gz
    target: Alfred/logs/build/host/build_$${DRONE_BUILD_NUMBER}/logs.tar.gz
    flat: true
    insecure: true
  when:
    status:
    - failure
  depends_on:
    - Archive Alfred's build logs

- name: Test Alfred
  image: ros:humble-ros-base-jammy@sha256:e2bf5d73089ecafac2f14de05e7cbc1b20ab7568185e2011cec508286dcc6b09
  commands:
    - cd alfred
    - rm -fR src/sim/
    - . /opt/ros/$ROS_DISTRO/setup.sh
    - apt-get update 
    - rosdep install -y
      --from-paths src
      --ignore-src
    - colcon test
    - colcon test-result
  depends_on:
    - Build Alfred

- name: Archive Alfred's tests logs
  image: alpine:latest
  commands:
    - cd alfred/log/latest_test/
    - find -type f -print | tar -czf tests_logs.tar.gz --no-recursion -T -
  when:
    status:
    - failure
    - success
  depends_on:
    - Test Alfred

- name: Upload Alfred's tests logs
  image: plugins/artifactory
  settings:
    url:
      from_secret: ARTIFACTORY_PATH
    username:
      from_secret: ARTIFACTORY_USERNAME
    password:
      from_secret: ARTIFACTORY_PASSWORD
    source: alfred/log/latest_test/tests_logs.tar.gz
    target: Alfred/logs/tests/build_$${DRONE_BUILD_NUMBER}/logs.tar.gz
    flat: true
    insecure: true
  when:
    status:
    - failure
    - success
  depends_on:
    - Archive Alfred's tests logs

- name: Test remote
  image: rust:latest
  commands:
    - cd remote
    - rustup target add thumbv7em-none-eabihf
    - cargo test

trigger:
  event:
    exclude:
    - promote

---
kind: pipeline
type: docker
name: Target build
platform:
  os: linux
  arch: arm64

steps:
- name: Prepare sysroot
  image: ros:humble-ros-base-jammy@sha256:b0b9bb05b0dceb08acc0e640c5b1c8a205da350369881d61b4ef42715ee42a63
  commands:
    - cd alfred
    - rm -fR src/sim/
    - . /opt/ros/$ROS_DISTRO/setup.sh
    - apt-get update
    - apt-get install -y symlinks
    - rosdep install -y
      --from-paths src
      --ignore-src
    - cd /
    - symlinks -rc .
    - mkdir -p $DRONE_WORKSPACE/alfred/cross_compile/sysroot
    - cp -a lib usr opt etc $DRONE_WORKSPACE/alfred/cross_compile/sysroot

- name: Build Alfred
  image: ros:humble-ros-base-jammy@sha256:e2bf5d73089ecafac2f14de05e7cbc1b20ab7568185e2011cec508286dcc6b09
  environment:
    RMW_IMPLEMENTATION: rmw_fastrtps_cpp
    TARGET_ARCH: aarch64
    CROSS_COMPILE: /usr/bin/aarch64-linux-gnu-
    PYTHON_SOABI: cpython-310-aarch64-linux-gnu
    CC: /usr/bin/aarch64-linux-gnu-gcc
    CXX: /usr/bin/aarch64-linux-gnu-g++

  commands:
    - export SYSROOT=$DRONE_WORKSPACE/alfred/cross_compile/sysroot
    - export ROS2_INSTALL_PATH=$DRONE_WORKSPACE/alfred/install
    - export CROSS_COMPILE_DIR=$DRONE_WORKSPACE/alfred/cross_compile
    - cd alfred
    - rm -fR sim/
    - . /opt/ros/$ROS_DISTRO/setup.sh
    - apt-get update
    - apt-get install -y g++-aarch64-linux-gnu g++-arm-linux-gnueabihf
    - rosdep install -y
      --from-paths src
      --ignore-src
    # Quick and dirty fix => to be investigated further
    - cp $SYSROOT/usr/lib/aarch64-linux-gnu/libpython3.10.so /usr/lib/aarch64-linux-gnu/libpython3.10.so
    - colcon build
      --cmake-args -DCMAKE_TOOLCHAIN_FILE=$CROSS_COMPILE_DIR/cmake-toolchains/generic_linux.cmake
      --no-warn-unused-cli
  depends_on:
    - Prepare sysroot

- name: Copy install files to host
  image: alpine:latest
  volumes:
    - name: target_files
      path: /tmp/target_files
  commands:
    - apk update && apk add rsync
    - rsync -a --delete $DRONE_WORKSPACE/alfred/install/ /tmp/target_files/
  depends_on:
    - Build Alfred

- name: Archive Alfred's build logs
  image: alpine:latest
  commands:
    - cd alfred/log/latest_build/
    - find -type f -print | tar -czf build_logs.tar.gz --no-recursion -T -
  when:
    status:
    - failure
  depends_on:
    - Build Alfred

- name: Upload Alfred's build logs
  image: plugins/artifactory
  settings:
    url:
      from_secret: ARTIFACTORY_PATH
    username:
      from_secret: ARTIFACTORY_USERNAME
    password:
      from_secret: ARTIFACTORY_PASSWORD
    source: alfred/log/latest_build/build_logs.tar.gz
    target: Alfred/logs/build/target/build_$${DRONE_BUILD_NUMBER}/logs.tar.gz
    flat: true
    insecure: true
  when:
    status:
    - failure
  depends_on:
    - Archive Alfred's build logs

- name: Archive Alfred's binaries
  image: alpine:latest
  commands:
    - cd alfred/install/
    - find -print | tar -czf install.tar.gz --no-recursion -T -
  depends_on:
    - Copy install files to host

- name: Upload Alfred's binaries
  image: plugins/artifactory
  settings:
    url:
      from_secret: ARTIFACTORY_PATH
    username:
      from_secret: ARTIFACTORY_USERNAME
    password:
      from_secret: ARTIFACTORY_PASSWORD
    source: alfred/install/install.tar.gz
    target: Alfred/binaries/development/build_$${DRONE_BUILD_NUMBER}/install.tar.gz
    flat: true
    insecure: true
  depends_on:
    - Archive Alfred's binaries

- name: Build remote
  image: rust:latest
  commands:
    - cd remote/remote
    - rustup target add thumbv7em-none-eabihf
    - cargo build

- name: Upload remote's binaries
  image: plugins/artifactory
  settings:
    url:
      from_secret: ARTIFACTORY_PATH
    username:
      from_secret: ARTIFACTORY_USERNAME
    password:
      from_secret: ARTIFACTORY_PASSWORD
    source: remote/remote/target/thumbv7em-none-eabihf/debug/bluetooth
    target: Alfred/binaries/development/build_$${DRONE_BUILD_NUMBER}/remote
    flat: true
    insecure: true
  when:
    status:
    - failure
    - success
  depends_on:
    - Build remote

volumes:
- name: target_files
  host:
    path: /usr/tmp/install

trigger:
  event:
    exclude:
    - promote

---
kind: pipeline
type: docker
name: Deploy
platform:
  os: linux
  arch: amd64

steps:
- name: Deploy Alfred
  image: drillster/drone-rsync
  volumes:
    - name: target_files
      path: /tmp/target_files
  settings:
    hosts: [ "192.168.5.253" ]
    port: 22
    source: /tmp/target_files/
    target: ~/Alfred/
    user:
      from_secret: ALFRED_USERNAME
    key:
      from_secret: ALFRED_SSH_KEY
    args:
      -v
      --delete
      --copy-links

- name: Archive Alfred's binaries
  image: alpine:latest
  volumes:
    - name: target_files
      path: /tmp/target_files
  commands:
    - cd /tmp/target_files
    - find -print | tar -czf install.tar.gz --no-recursion -T -
  depends_on:
    - Deploy Alfred

- name: Upload Alfred's binaries
  image: plugins/artifactory
  volumes:
    - name: target_files
      path: /tmp/target_files
  settings:
    url:
      from_secret: ARTIFACTORY_PATH
    username:
      from_secret: ARTIFACTORY_USERNAME
    password:
      from_secret: ARTIFACTORY_PASSWORD
    source: /tmp/target_files/install.tar.gz
    target: Alfred/binaries/deployment/build_$${DRONE_BUILD_NUMBER}/install.tar.gz
    flat: true
    insecure: true
  depends_on:
    - Archive Alfred's binaries

- name: Build remote
  image: rust:latest
  commands:
    - cd remote/remote
    - rustup target add thumbv7em-none-eabihf
    - cargo build --release

- name: Upload remote's binaries
  image: plugins/artifactory
  settings:
    url:
      from_secret: ARTIFACTORY_PATH
    username:
      from_secret: ARTIFACTORY_USERNAME
    password:
      from_secret: ARTIFACTORY_PASSWORD
    source: remote/remote/target/thumbv7em-none-eabihf/release/bluetooth
    target: Alfred/binaries/deployment/build_$${DRONE_BUILD_NUMBER}/remote
    flat: true
    insecure: true
  when:
    status:
    - failure
    - success
  depends_on:
    - Build remote

volumes:
- name: target_files
  host:
    path: /usr/tmp/install

trigger:
  event:
  - promote
  target:
  - Alfred
